{"version":3,"sources":["AnswerChoice.js","AnswerContainer.js","breedsData.js","utils/dogApi.js","app.js","index.js"],"names":["AnswerChoices","props","borderColor","className","onClick","event","handleChoice","text","style","AnswerContainer","state","multipleChoiceAnswers","breed","userSelectedAnswer","wasChoiceSelected","bind","showAnswerResult","getUpdateMultipleChoiceAnswers","onAnswerCorrect","data","incrementScore","preventDefault","this","selectedChoiceText","map","multipleChoice","id","updatedChoices","setState","answerChoices","element","AnswerChoice","key","React","Component","breeds","affenpinscher","african","airedale","akita","appenzeller","australian","basenji","beagle","bluetick","borzoi","bouvier","boxer","brabancon","briard","buhund","bulldog","bullterrier","cairn","cattledog","chihuahua","chow","clumber","cockapoo","collie","coonhound","corgi","cotondetulear","dachshund","dalmatian","dane","deerhound","dhole","dingo","doberman","elkhound","entlebucher","eskimo","frise","germanshepherd","greyhound","groenendael","havanese","hound","husky","keeshond","kelpie","komondor","kuvasz","labrador","leonberg","lhasa","malamute","malinois","maltese","mastiff","mexicanhairless","mix","mountain","newfoundland","otterhound","papillon","pekinese","pembroke","pinscher","pitbull","pointer","pomeranian","poodle","pug","puggle","pyrenees","redbone","retriever","ridgeback","rottweiler","saluki","samoyed","schipperke","schnauzer","setter","sheepdog","shiba","shihtzu","spaniel","springer","stbernard","terrier","vizsla","waterdog","weimaraner","whippet","wolfhound","fullBreedNames","keyBreeds","Object","keys","fullBreedNameArr","forEach","subBreedNames","propName","length","name","push","configureBreedNames","fetchDoggo","fetch","then","response","json","correctBreedName","message","end","lastIndexOf","split","slice","join","retrieveBreedName","multipleChoicesSet","Set","size","randomDogBreed","getRandomDog","add","multipleChoiceArrayOfObjects","Array","from","breedName","sort","Math","random","getMultiChoiceAnswers","includes","breedNameSwapped","a","b","handleNameSwap","console","log","image","floor","App","err","score","questionNumber","error","increment","getDoggoData","handleNewGame","handleArrowClick","fetchDoggoPromise","DogAPi","catch","prevState","src","Provider","value","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.428d846a.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction AnswerChoices(props) {\n  const borderColor = {\n    borderColor: props.borderColor\n  };\n\n  return (\n    <div className=\"text-center\">\n      <button\n        className=\"multipleChoice\"\n        onClick={event => props.handleChoice(event, props.text)}\n        style={borderColor}\n      >\n        {props.text}\n      </button>\n    </div>\n  );\n}\n\nexport default AnswerChoices;\n","import AnswerChoices from \"./AnswerChoice\";\nimport React from \"react\";\n\nclass AnswerContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      multipleChoiceAnswers: [],\n      breed: \"\",\n      userSelectedAnswer: \"\",\n      wasChoiceSelected: false\n      // isCorrectAnswer: false\n    };\n    this.handleChoice = this.handleChoice.bind(this);\n    this.showAnswerResult = this.showAnswerResult.bind(this);\n    this.getUpdateMultipleChoiceAnswers = this.getUpdateMultipleChoiceAnswers.bind(\n      this\n    );\n    this.onAnswerCorrect = props.data.incrementScore;\n  }\n\n  // this method gets called before render and everytime the state changes / we get new props\n  static getDerivedStateFromProps(props, state) {\n    const { multipleChoiceAnswers, breed } = props.data;\n    //in a static method we cannot use this keyword\n    if (breed !== state.breed) {\n      return {\n        multipleChoiceAnswers: multipleChoiceAnswers,\n        breed: breed,\n        wasChoiceSelected: false\n      };\n    }\n    // Return null if the state hasn't changed\n    return null;\n  }\n\n  handleChoice(event, text) {\n    // So page doesn't refresh when button is pressed\n    event.preventDefault();\n    //prevents the user from choosing an answer after they've chosen one\n    if (this.state.wasChoiceSelected) {\n      return;\n    }\n    this.showAnswerResult(text);\n  }\n\n  getUpdateMultipleChoiceAnswers(selectedChoiceText) {\n    return this.state.multipleChoiceAnswers.map(multipleChoice => {\n      // If the selected one is the current element\n      if (selectedChoiceText === multipleChoice.breed) {\n        // IF what is selected is the correct answer\n        if (selectedChoiceText === this.state.breed) {\n          this.onAnswerCorrect();\n          return {\n            borderColor: \"green\",\n            breed: selectedChoiceText\n          };\n        }\n\n        // If what is selected is incorrect answer\n        return {\n          borderColor: \"red\",\n          breed: selectedChoiceText\n        };\n      }\n\n      // No change for all others\n      return multipleChoice;\n    });\n  }\n\n  showAnswerResult(id) {\n    const updatedChoices = this.getUpdateMultipleChoiceAnswers(id);\n    this.setState({\n      multipleChoiceAnswers: updatedChoices,\n      userSelectedAnswer: id,\n      wasChoiceSelected: true\n    });\n  }\n\n  render() {\n    const answerChoices = this.state.multipleChoiceAnswers.map(element => {\n      const { breed, borderColor } = element;\n\n      // console.log(element);\n      // console.log(breed);\n      return (\n        <AnswerChoices\n          key={breed}\n          text={breed}\n          borderColor={borderColor}\n          handleChoice={this.handleChoice}\n        />\n      );\n    });\n\n    return <div>{answerChoices}</div>;\n  }\n}\nexport default AnswerContainer;\n","const breeds = {\n  affenpinscher: [],\n  african: [],\n  airedale: [],\n  akita: [],\n  appenzeller: [],\n  australian: [\"shepherd\"],\n  basenji: [],\n  beagle: [],\n  bluetick: [],\n  borzoi: [],\n  bouvier: [],\n  boxer: [],\n  brabancon: [],\n  briard: [],\n  buhund: [\"norwegian\"],\n  bulldog: [\"boston\", \"english\", \"french\"],\n  bullterrier: [\"staffordshire\"],\n  cairn: [],\n  cattledog: [\"australian\"],\n  chihuahua: [],\n  chow: [],\n  clumber: [],\n  cockapoo: [],\n  collie: [\"border\"],\n  coonhound: [],\n  corgi: [\"cardigan\"],\n  cotondetulear: [],\n  dachshund: [],\n  dalmatian: [],\n  dane: [\"great\"],\n  deerhound: [\"scottish\"],\n  dhole: [],\n  dingo: [],\n  doberman: [],\n  elkhound: [\"norwegian\"],\n  entlebucher: [],\n  eskimo: [],\n  frise: [\"bichon\"],\n  germanshepherd: [],\n  greyhound: [\"italian\"],\n  groenendael: [],\n  havanese: [],\n  hound: [\"afghan\", \"basset\", \"blood\", \"english\", \"ibizan\", \"plott\", \"walker\"],\n  husky: [],\n  keeshond: [],\n  kelpie: [],\n  komondor: [],\n  kuvasz: [],\n  labrador: [],\n  leonberg: [],\n  lhasa: [],\n  malamute: [],\n  malinois: [],\n  maltese: [],\n  mastiff: [\"bull\", \"english\", \"tibetan\"],\n  mexicanhairless: [],\n  mix: [],\n  mountain: [\"bernese\", \"swiss\"],\n  newfoundland: [],\n  otterhound: [],\n  papillon: [],\n  pekinese: [],\n  pembroke: [],\n  pinscher: [\"miniature\"],\n  pitbull: [],\n  pointer: [\"german\", \"german longhair\"],\n  pomeranian: [],\n  poodle: [\"miniature\", \"standard\", \"toy\"],\n  pug: [],\n  puggle: [],\n  pyrenees: [],\n  redbone: [],\n  retriever: [\"chesapeake\", \"curly\", \"flatcoated\", \"golden\"],\n  ridgeback: [\"rhodesian\"],\n  rottweiler: [],\n  saluki: [],\n  samoyed: [],\n  schipperke: [],\n  schnauzer: [\"giant\", \"miniature\"],\n  setter: [\"english\", \"gordon\", \"irish\"],\n  sheepdog: [\"english\", \"shetland\"],\n  shiba: [],\n  shihtzu: [],\n  spaniel: [\n    \"blenheim\",\n    \"brittany\",\n    \"cocker\",\n    \"irish\",\n    \"japanese\",\n    \"sussex\",\n    \"welsh\"\n  ],\n  springer: [\"english\"],\n  stbernard: [],\n  terrier: [\n    \"american\",\n    \"australian\",\n    \"bedlington\",\n    \"border\",\n    \"dandie\",\n    \"fox\",\n    \"irish\",\n    \"kerryblue\",\n    \"lakeland\",\n    \"norfolk\",\n    \"norwich\",\n    \"patterdale\",\n    \"russell\",\n    \"scottish\",\n    \"sealyham\",\n    \"silky\",\n    \"tibetan\",\n    \"toy\",\n    \"westhighland\",\n    \"wheaten\",\n    \"yorkshire\"\n  ],\n  vizsla: [],\n  waterdog: [\"spanish\"],\n  weimaraner: [],\n  whippet: [],\n  wolfhound: [\"irish\"]\n};\n\nexport default breeds;\n","import breeds from \"../breedsData\";\n\nconst fullBreedNames = configureBreedNames();\n\nfunction retrieveBreedName(data) {\n  const { message } = data;\n  const end = message.lastIndexOf(\"/\");\n  let breedName = message\n    .split(\"\")\n    .slice(30, end)\n    .join(\"\");\n  return breedName;\n}\n\nfunction configureBreedNames() {\n  const keyBreeds = Object.keys(breeds);\n  const fullBreedNameArr = [];\n\n  keyBreeds.forEach(props => {\n    const subBreedNames = breeds[props];\n    let propName = props;\n    if (subBreedNames.length >= 1) {\n      subBreedNames.forEach(name =>\n        fullBreedNameArr.push(`${name} ${propName}`)\n      );\n    } else {\n      fullBreedNameArr.push(props);\n    }\n  });\n  return fullBreedNameArr;\n}\n\nfunction handleNameSwap(breedName) {\n  if (breedName.includes(\"-\")) {\n    const breedNameSwapped = breedName.split(\"-\");\n    let a = breedNameSwapped[0];\n    let b = breedNameSwapped[1];\n    [a, b] = [b, a];\n    breedName = [a, b].join(\" \");\n  }\n  return breedName;\n}\n\nfunction fetchDoggo() {\n  const dogPromise = fetch(\"https://dog.ceo/api/breeds/image/random\");\n  return dogPromise\n    .then(response => response.json())\n    .then(data => {\n      // Breed work\n      let correctBreedName = retrieveBreedName(data);\n      correctBreedName = handleNameSwap(correctBreedName);\n\n      const updatedChoices = getMultiChoiceAnswers(correctBreedName);\n      console.log(updatedChoices);\n      return {\n        correctBreedName: correctBreedName,\n        image: data.message,\n        multipleChoiceAnswers: updatedChoices\n      };\n    });\n}\n\nfunction getRandomDog() {\n  const chooseRandomDog =\n    fullBreedNames[Math.floor(Math.random() * fullBreedNames.length)];\n  return chooseRandomDog;\n}\n\nfunction getMultiChoiceAnswers(correctBreedName) {\n  // Add the correct breedName into the set\n  const multipleChoicesSet = new Set([correctBreedName]);\n\n  // While the set is not equal to 4\n  while (multipleChoicesSet.size <= 3) {\n    let randomDogBreed = getRandomDog();\n\n    //  Add a random dog breed name, NOT dog object to the set\n    multipleChoicesSet.add(randomDogBreed);\n  }\n  // If we exited while then we have 4 dog names in a set\n\n  // Convert set to array of dog objects\n  const multipleChoiceArray = Array.from(multipleChoicesSet);\n  const multipleChoiceArrayOfObjects = multipleChoiceArray.map(breedName => ({\n    breed: breedName\n  }));\n\n  // Shuffle\n  multipleChoiceArrayOfObjects.sort(() => 0.5 - Math.random());\n  return multipleChoiceArrayOfObjects;\n}\n\nexport { retrieveBreedName, configureBreedNames, handleNameSwap, fetchDoggo };\n","import React from \"react\";\n\nimport AnswerContainer from \"./AnswerContainer\";\nimport { FaArrowRight } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport { MdFiberNew } from \"react-icons/md\";\nimport * as DogAPi from \"./utils/dogApi\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      image: \"\",\n      breed: \"\",\n      err: \"\",\n      multipleChoiceAnswers: [],\n      score: 0,\n      questionNumber: 1,\n    };\n\n    this.error = this.error.bind(this);\n    this.increment = this.increment.bind(this);\n    this.getDoggoData = this.getDoggoData.bind(this);\n    this.handleNewGame = this.handleNewGame.bind(this);\n    this.handleArrowClick = this.handleArrowClick.bind(this);\n  }\n\n  getDoggoData() {\n    const fetchDoggoPromise = DogAPi.fetchDoggo();\n\n    fetchDoggoPromise.then((data) => {\n      const { correctBreedName, image, multipleChoiceAnswers } = data;\n      this.setState({\n        image: image,\n        breed: correctBreedName,\n        multipleChoiceAnswers: multipleChoiceAnswers,\n      });\n    });\n\n    fetchDoggoPromise.catch(this.error);\n  }\n\n  componentDidMount() {\n    this.getDoggoData();\n  }\n\n  handleArrowClick() {\n    // event.preventDefault();\n    if (this.state.questionNumber <= 9) {\n      this.setState((prevState) => {\n        return {\n          questionNumber: prevState.questionNumber + 1,\n        };\n      });\n      this.getDoggoData();\n    }\n  }\n\n  increment() {\n    this.setState((prevState) => {\n      return {\n        score: prevState.score + 1,\n      };\n    });\n  }\n\n  handleNewGame() {\n    this.setState({\n      questionNumber: 1,\n      score: 0,\n    });\n    this.getDoggoData();\n  }\n\n  error() {\n    this.setState({ err: \"Oops, something went wrong! :-(\" });\n  }\n\n  render() {\n    return (\n      <div>\n        <span className=\"title\">So You Think You Know Dog Breeds?</span>\n        <br />\n        <span className=\"score\">\n          Score: {this.state.score} - Round {this.state.questionNumber}\n        </span>\n\n        <div className=\"container-fluid mt-3\">\n          <div className=\"row justify-content-center align-items-center contentContainer\">\n            <div className=\"col-lg-4\">\n              {this.state.err.length !== 0 ? <p>{this.state.err}</p> : null}\n              <img className=\"dogImage\" src={this.state.image} />\n            </div>\n\n            <div className=\"multipleChoiceContainer col-lg-3\">\n              <AnswerContainer\n                data={{\n                  breed: this.state.breed,\n                  multipleChoiceAnswers: this.state.multipleChoiceAnswers,\n                  incrementScore: this.increment,\n                }}\n              />\n            </div>\n            <button className=\"arrowIcon\" onClick={this.handleArrowClick}>\n              <IconContext.Provider value={{ size: \"2em\" }}>\n                <FaArrowRight />\n              </IconContext.Provider>\n            </button>\n            <button className=\"newIcon\" onClick={this.handleNewGame}>\n              <IconContext.Provider value={{ size: \"2.5em\" }}>\n                <MdFiberNew />\n              </IconContext.Provider>\n            </button>\n            <br />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style.css\";\nimport App from \"./app\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}